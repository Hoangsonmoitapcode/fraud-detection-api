name: Build and Deploy Docker Image to Railway

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'requirements.txt'
      - 'requirements-prod.txt'
      - 'deployment/Dockerfile'
      - 'railway.json'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Verify build environment
      run: |
        echo "âœ… Build environment ready"
        echo "ðŸ“¦ PyTorch CPU-only, slim image (~1.5GB)"
        echo "ðŸš€ Fast build for Railway Free Plan"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./deployment/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
        outputs: type=registry
        shm-size: 2gb

    - name: Install Railway CLI
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        railway --version

    - name: Deploy to Railway
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        # Explicitly link to the project and service to avoid ambiguity
        railway link ${{ secrets.RAILWAY_PROJECT_ID }} ${{ secrets.RAILWAY_SERVICE_ID }}
        
        # Deploy the linked service, specifying the service ID again for safety
        railway up --detach --service ${{ secrets.RAILWAY_SERVICE_ID }}

    - name: Build summary
      run: |
        echo "## ðŸš€ Docker Image Built & Deployed Successfully" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Features**: AI-enabled PhoBERT SMS classifier" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment**: Railway Free Plan" >> $GITHUB_STEP_SUMMARY
        echo "- **Build time**: ~10-15 minutes" >> $GITHUB_STEP_SUMMARY
